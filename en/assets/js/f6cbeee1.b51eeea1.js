"use strict";(self.webpackChunkdoctest=self.webpackChunkdoctest||[]).push([[836],{4641:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"/2023/5/23/index","metadata":{"permalink":"/en/blog/2023/5/23/index","source":"@site/blog/2023-5-23/index.md","title":"AtomicReference","description":"lambda\u8a9e\u6cd5\u4e2d\u4f7f\u7528\u5230local variable\u6642\uff0c\u5fc5\u9808\u662feffective final\u3002","date":"2023-05-23T00:00:00.000Z","formattedDate":"May 23, 2023","tags":[{"label":"java","permalink":"/en/blog/tags/java"}],"readingTime":1.88,"hasTruncateMarker":false,"authors":[{"name":"Vincent","email":"vincent.tsd@gmail.com","key":"Vincent"}],"frontMatter":{"title":"AtomicReference","authors":["Vincent"],"tags":["java"]},"nextItem":{"title":"Welcome","permalink":"/en/blog/2023/5/17/first"}},"content":"lambda\u8a9e\u6cd5\u4e2d\u4f7f\u7528\u5230local variable\u6642\uff0c\u5fc5\u9808\u662feffective final\u3002\\n\\n\u4f8b\u5982\u6211\u5011\u60f3\u5728\u4ee5\u4e0b\u7684List\u4e2d\uff0c\u53d6\u5f97\u6240\u6709\u5b57\u6578\u7684\u7e3d\u5408\uff0c\u4e26\u4e14\u53d6\u5f97\u5b57\u6578\u6700\u9577\u7684\u5b57\uff0c\u4ee5\u4e0b\u662f\u4f7f\u7528\u8ff4\u5708\u8655\u7406\u7684\u7bc4\u4f8b\u3002\\n\\n```java showLineNumbers\\nList<String> names = Arrays.asList(\\"Vincent\\", \\"David\\", \\"Ken\\", \\"Randolph\\");\\nString maxLengthName = null;\\nint totalWordCount = 0;\\nfor (String name : names) {\\n    if ( maxLengthName == null ){\\n        maxLengthName = name;\\n    }\\n    if ( name.length() > maxLengthName.length()){\\n        maxLengthName = name;\\n    }\\n    totalWordCount = totalWordCount + name.length();\\n}\\nSystem.out.println(\\"maxLengthName = \\" + maxLengthName);\\n```\\n\\n\u5982\u679c\u4f7f\u7528stream\u4f86\u8655\u7406\uff0c\u53d6\u5f97\u5b57\u7e3d\u548c\u4e5f\u5f88\u5bb9\u6613\\n\\n```java showLineNumbers\\nList<String> names = Arrays.asList(\\"Vincent\\", \\"David\\", \\"Ken\\", \\"Randolph\\");\\nlong totalWordCount = names.stream().mapToInt(String::length).sum();\\n```\\n\\n\u4f46\u5982\u679c\u60f3\u8981\u5728\u540c\u4e00\u500bstream\u4e2d\u53d6\u5f97\u5b57\u6578\u6700\u9577\u7684\u5b57\uff0c\u8a66\u8457\u7528\u8ddf\u8ff4\u5708\u4e00\u6a23\u7684\u8655\u7406\u65b9\u5f0f\\n\\n```java showLineNumbers\\nString maxLengthName = null;\\nList<String> names = Arrays.asList(\\"Vincent\\", \\"David\\", \\"Ken\\", \\"Randolph\\");\\nlong totalLength = names.stream().mapToInt(name ->{\\n    if ( maxLengthName == null ){\\n        maxLengthName = name;\\n    }\\n    if ( name.length() > maxLengthName.length()){\\n        maxLengthName = name;\\n    }\\n    return name.length();\\n}).count();\\n```\\n\\n\u4e0a\u8ff0\u7684\u4f8b\u5b50\u4e2d\uff0c\u7b2c4\u884ccompile\u6703\u767c\u751f\u932f\u8aa4\u300cVariable used in lambda expression should be final or effectively final\u300d\uff0c\u56e0\u70ba\u5728lambda\u4e2d\u6539\u8b8alocal variable(**maxLengthName**)\u7684\u503c\u662f\u4e0d\u88ab\u5141\u8a31\u7684\uff0c\u6240\u8b02\u7684effective final\u5c31\u662f\u7a0b\u5f0f\u4e2d\u5ba3\u544a\u6c92\u6709\u8a3b\u660e\u8b8a\u6578\u70bafinal\uff0c\u4f46\u8b8a\u6578\u7684\u503c\u5f9e\u4f86\u6c92\u6709\u88ab\u6539\u8b8a\u904e\uff0c\u5247\u53ef\u4ee5\u8996\u70bafinal\u3002\\n\\n\u5229\u7528AtomicReference\u4f86\u6539\u5beb\u4e0a\u9762\u7684\u7a0b\u5f0f\uff0c\u53ef\u4ee5\u907f\u958bfinal\u7684\u554f\u984c\uff0c\u56e0\u70ba\u9019\u88cfmaxLengthNameRef\u4e26\u6c92\u6709\u88ab\u6539\u8b8a\uff0c\u6539\u8b8a\u7684\u662f\u88cf\u9762\u5b58\u7684\u503c\u3002\\n\\n```java\\nList<String> names = Arrays.asList(\\"Vincent\\", \\"David\\", \\"Ken\\", \\"Randolph\\");\\nAtomicReference<String> maxLengthNameRef = new AtomicReference<>(null);\\nlong totalWordCount = names.stream().peek(name -> {\\n    maxLengthNameRef.compareAndSet(null, name);\\n    if (name.length() > maxLengthNameRef.get().length()) {\\n        maxLengthNameRef.set(name);\\n    }\\n}).mapToInt(String::length).sum();\\nSystem.out.println(\\"totalWordCount = \\" + totalWordCount);\\nSystem.out.println(\\"maxLength = \\" + maxLengthNameRef.get());\\n```"},{"id":"/2023/5/17/first","metadata":{"permalink":"/en/blog/2023/5/17/first","source":"@site/blog/2023-5-17-first/index.md","title":"Welcome","description":"\u7c21\u55ae\u7684\u8a18\u9304\u4e00\u4e9b\u60f3\u8a18\u9304\u7684\uff0c\u9019\u500b\u7db2\u7ad9\u662f\u5229\u7528Docusaurus \u505a\u8d77\u4f86\u7684\uff0c\u5c0d\u6280\u8853\u4eba\u54e1\u4f86\u8aaa\u7b97\u662f\u76f8\u7576\u7684\u53cb\u5584\u3002\u4e00\u958b\u59cb\u672c\u4f86\u662f\u4f7f\u7528Docsify\uff0c\u4e0d\u904e\u4f3c\u4e4e\u80fd\u8a2d\u5b9a\u7684\u5730\u65b9\u4e0d\u591a\uff0c\u6211\u60f3\u639b\u500bgoogle analytics\u90fd\u639b\u4e0d\u4e0a\u53bb\uff0c\u67e5\u4e0d\u51fa\u554f\u984c\u5728\u90a3\u88cf\u3002","date":"2023-05-17T00:00:00.000Z","formattedDate":"May 17, 2023","tags":[{"label":"java","permalink":"/en/blog/tags/java"},{"label":"Docusaurus","permalink":"/en/blog/tags/docusaurus"}],"readingTime":0.385,"hasTruncateMarker":false,"authors":[{"name":"Vincent","email":"vincent.tsd@gmail.com","key":"Vincent"}],"frontMatter":{"title":"Welcome","authors":["Vincent"],"tags":["java","Docusaurus"]},"prevItem":{"title":"AtomicReference","permalink":"/en/blog/2023/5/23/index"}},"content":"\u7c21\u55ae\u7684\u8a18\u9304\u4e00\u4e9b\u60f3\u8a18\u9304\u7684\uff0c\u9019\u500b\u7db2\u7ad9\u662f\u5229\u7528[Docusaurus](https://github.com/facebook/docusaurus) \u505a\u8d77\u4f86\u7684\uff0c\u5c0d\u6280\u8853\u4eba\u54e1\u4f86\u8aaa\u7b97\u662f\u76f8\u7576\u7684\u53cb\u5584\u3002\u4e00\u958b\u59cb\u672c\u4f86\u662f\u4f7f\u7528Docsify\uff0c\u4e0d\u904e\u4f3c\u4e4e\u80fd\u8a2d\u5b9a\u7684\u5730\u65b9\u4e0d\u591a\uff0c\u6211\u60f3\u639b\u500bgoogle analytics\u90fd\u639b\u4e0d\u4e0a\u53bb\uff0c\u67e5\u4e0d\u51fa\u554f\u984c\u5728\u90a3\u88cf\u3002"}]}')}}]);